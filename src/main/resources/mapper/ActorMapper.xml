<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ws.mapper.ActorMapper">
    <resultMap id="BaseResultMap" type="com.ws.bean.Actor">
        <id column="actor_id" jdbcType="VARCHAR" property="actorId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="home_place" jdbcType="VARCHAR" property="homePlace"/>
        <result column="birthday" jdbcType="VARCHAR" property="birthday"/>
        <result column="occupation" jdbcType="VARCHAR" property="occupation"/>
        <result column="img_url" jdbcType="VARCHAR" property="imgUrl"/>
        <result column="alias" jdbcType="VARCHAR" property="alias"/>
        <result column="imdb_id" jdbcType="VARCHAR" property="imdbId"/>
        <result column="info" jdbcType="VARCHAR" property="info"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    actor_id, name, sex, home_place, birthday, occupation, img_url, alias, imdb_id, info, 
    status, create_time, update_time
  </sql>
    <select id="selectByExample" parameterType="com.ws.bean.ActorExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from actor
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from actor
        where actor_id = #{actorId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from actor
    where actor_id = #{actorId,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.ws.bean.ActorExample">
        delete from actor
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ws.bean.Actor">
    insert into actor (actor_id, name, sex, 
      home_place, birthday, occupation, 
      img_url, alias, imdb_id, 
      info, status, create_time, 
      update_time)
    values (#{actorId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{homePlace,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR}, #{occupation,jdbcType=VARCHAR}, 
      #{imgUrl,jdbcType=VARCHAR}, #{alias,jdbcType=VARCHAR}, #{imdbId,jdbcType=VARCHAR}, 
      #{info,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.ws.bean.Actor">
        insert into actor
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="actorId != null">
                actor_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="homePlace != null">
                home_place,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="occupation != null">
                occupation,
            </if>
            <if test="imgUrl != null">
                img_url,
            </if>
            <if test="alias != null">
                alias,
            </if>
            <if test="imdbId != null">
                imdb_id,
            </if>
            <if test="info != null">
                info,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="actorId != null">
                #{actorId,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=VARCHAR},
            </if>
            <if test="homePlace != null">
                #{homePlace,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=VARCHAR},
            </if>
            <if test="occupation != null">
                #{occupation,jdbcType=VARCHAR},
            </if>
            <if test="imgUrl != null">
                #{imgUrl,jdbcType=VARCHAR},
            </if>
            <if test="alias != null">
                #{alias,jdbcType=VARCHAR},
            </if>
            <if test="imdbId != null">
                #{imdbId,jdbcType=VARCHAR},
            </if>
            <if test="info != null">
                #{info,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ws.bean.ActorExample" resultType="java.lang.Long">
        select count(*) from actor
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update actor
        <set>
            <if test="record.actorId != null">
                actor_id = #{record.actorId,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.sex != null">
                sex = #{record.sex,jdbcType=VARCHAR},
            </if>
            <if test="record.homePlace != null">
                home_place = #{record.homePlace,jdbcType=VARCHAR},
            </if>
            <if test="record.birthday != null">
                birthday = #{record.birthday,jdbcType=VARCHAR},
            </if>
            <if test="record.occupation != null">
                occupation = #{record.occupation,jdbcType=VARCHAR},
            </if>
            <if test="record.imgUrl != null">
                img_url = #{record.imgUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.alias != null">
                alias = #{record.alias,jdbcType=VARCHAR},
            </if>
            <if test="record.imdbId != null">
                imdb_id = #{record.imdbId,jdbcType=VARCHAR},
            </if>
            <if test="record.info != null">
                info = #{record.info,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update actor
        set actor_id = #{record.actorId,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        sex = #{record.sex,jdbcType=VARCHAR},
        home_place = #{record.homePlace,jdbcType=VARCHAR},
        birthday = #{record.birthday,jdbcType=VARCHAR},
        occupation = #{record.occupation,jdbcType=VARCHAR},
        img_url = #{record.imgUrl,jdbcType=VARCHAR},
        alias = #{record.alias,jdbcType=VARCHAR},
        imdb_id = #{record.imdbId,jdbcType=VARCHAR},
        info = #{record.info,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ws.bean.Actor">
        update actor
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=VARCHAR},
            </if>
            <if test="homePlace != null">
                home_place = #{homePlace,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=VARCHAR},
            </if>
            <if test="occupation != null">
                occupation = #{occupation,jdbcType=VARCHAR},
            </if>
            <if test="imgUrl != null">
                img_url = #{imgUrl,jdbcType=VARCHAR},
            </if>
            <if test="alias != null">
                alias = #{alias,jdbcType=VARCHAR},
            </if>
            <if test="imdbId != null">
                imdb_id = #{imdbId,jdbcType=VARCHAR},
            </if>
            <if test="info != null">
                info = #{info,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where actor_id = #{actorId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ws.bean.Actor">
    update actor
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      home_place = #{homePlace,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      occupation = #{occupation,jdbcType=VARCHAR},
      img_url = #{imgUrl,jdbcType=VARCHAR},
      alias = #{alias,jdbcType=VARCHAR},
      imdb_id = #{imdbId,jdbcType=VARCHAR},
      info = #{info,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where actor_id = #{actorId,jdbcType=VARCHAR}
  </update>
    <select id="getActorsFamous" resultMap="BaseResultMap">
    SELECT a.* FROM actor a
    INNER  JOIN movie_actor m USING(actor_id)
    group by(m.actor_id) order by(count(m.movie_id)) desc LIMIT 6
    </select>
    <select id="getActorsByMovieId" resultMap="BaseResultMap">
        select * from actor where actor_id in (
            select actor_id from movie_actor where movie_id = #{movieId}
        )
    </select>
</mapper>